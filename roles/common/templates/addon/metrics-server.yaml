# https://github.com/kubernetes-incubator/metrics-server/blob/master/deploy/1.8+

---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: kube-system
  name: metrics-server

# auth-reader.yaml
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: metrics-server-auth-reader
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: metrics-server

# aggregated-metrics-reader.yaml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:aggregated-metrics-reader
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - resources:
      - "*"
    apiGroups:
      - "metrics.k8s.io"
    verbs:
      - "get"
      - "list"
      - "watch"
  - nonResourceURLs:
      - '*'
    verbs:
      - "get"
      - "list"
      - "watch"

# auth-delegator.yaml
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: metrics-server:system:auth-delegator
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: metrics-server

# resource-reader.yaml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:metrics-server
rules:
  - resources:
      - "*"
    apiGroups:
      - ""
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - "get"
      - "list"
      - "watch"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:metrics-server
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:metrics-server
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: metrics-server

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-view-kube
rules:
  - resources:
      - "*"
    apiGroups:
      - "*"
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: binding-cluster-view-kube
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-view-kube
subjects:
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: system:anonymous

# metrics-apiservice.yaml
---
kind: APIService
apiVersion: apiregistration.k8s.io/v1beta1
metadata:
  name: v1beta1.metrics.k8s.io
spec:
  service:
    namespace: kube-system
    name: metrics-server
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100

# metrics-server-service.yaml
---
kind: Service
apiVersion: v1
metadata:
  namespace: kube-system
  name: metrics-server
  labels:
    kubernetes.io/name: "Metrics-server"
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    k8s-app: metrics-server
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443

# metrics-server-deployment.yaml
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  namespace: kube-system
  name: metrics-server
  labels:
    k8s-app: metrics-server
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1

  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server

      nodeSelector:
        beta.kubernetes.io/os: linux
      tolerations:
        - operator: Exists
          effect: NoSchedule

      volumes:
        # mount in tmp so we can safely use from-scratch images and/or read-only containers
        - name: tmp-dir
          emptyDir: {}
        # - name: timezone
        #   hostPath:
        #     path: /etc/timezone
        #     type: File
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai

      containers:
        - image: aksrepos.azurecr.io/mirror/metrics-server-amd64:v0.3.6
          imagePullPolicy: Always
          name: metrics-server

          # command:
          #   - /metrics-server
          args:
            - --logtostderr
            - --kubelet-insecure-tls
            - --kubelet-preferred-address-types=InternalIP

          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            # - name: timezone
            #   mountPath: "/etc/timezone"
            - name: localtime
              mountPath: "/etc/localtime"
